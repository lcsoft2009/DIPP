import java.io.IOException;

  
  
  /* ------------------------------------------------------------ */
  /** AbstractHandler.
   * 
   *
   */
  public abstract class AbstractHandler extends AggregateLifeCycle implements Handler
  {
      private static final Logger LOG = Log.getLogger(AbstractHandler.class);
  
      private Server _server;
      
      /* ------------------------------------------------------------ */
      /**
       * 
       */
     public AbstractHandler()
      {
      }
  
      /* ------------------------------------------------------------ */
      /* 
       * @see org.eclipse.thread.LifeCycle#start()
       */
      @Override
      protected void doStart() throws Exception
      {
          LOG.debug("starting {}",this);
          super.doStart();
      }
  
      /* ------------------------------------------------------------ */
      /* 
       * @see org.eclipse.thread.LifeCycle#stop()
      */
      @Override
      protected void doStop() throws Exception
      {
          LOG.debug("stopping {}",this);
          super.doStop();
      }
  
      /* ------------------------------------------------------------ */
      public void setServer(Server server)
      {
          Server old_server=_server;
          if (old_server!=null && old_server!=server)
              old_server.getContainer().removeBean(this);
          _server=server;
          if (_server!=null && _server!=old_server)
              _server.getContainer().addBean(this);
      }
  
      /* ------------------------------------------------------------ */
      public Server getServer()
      {
          return _server;
      }
  
      /* ------------------------------------------------------------ */
      public void destroy()
      {
          if (!isStopped())
              throw new IllegalStateException("!STOPPED");
          super.destroy();
          if (_server!=null)
              _server.getContainer().removeBean(this);
      }
  
      /* ------------------------------------------------------------ */
      public void dumpThis(Appendable out) throws IOException
     {
          out.append(toString()).append(" - ").append(getState()).append('\n');
      }
      
 }