package com.liangchu.http.servlet;
import com.liangchu.image.*;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.hadoop.hbase.KeyValue;
import org.apache.hadoop.hbase.client.HTable;
import org.apache.hadoop.hbase.client.Result;
import org.apache.hadoop.hbase.client.ResultScanner;
import org.apache.hadoop.hbase.client.Scan;

import com.liangchu.image.FqImage;

import java.io.*;
import java.util.*;
@SuppressWarnings("serial")
public class HelloServlet extends HttpServlet
{
    private String greeting="Image search";
    public HelloServlet(){}
    public HelloServlet(String greeting)
    {
        this.greeting=greeting;
    }
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException
    {	
        response.setContentType("text/html");
        response.setStatus(HttpServletResponse.SC_OK);
        response.getWriter().println("<h1>"+greeting+"</h1>");
        response.getWriter().println("session=" + request.getSession(true).getId());
        

response.setHeader("Pragma", "No-cache");
response.setHeader("Cache-Control", "no-cache");
PrintWriter out = response.getWriter();
out.println("<head><title>Image Search In Hadoop</title></head>");
out.println("<body>");


out.println("<pre>http://<em>your.server.name</em>/IBMWebAs/samples/index.aspl</pre>");


BufferedImage	im	=	ImageIO.read( new File("/home/hadoop/Desktop/image/1.jpg") );
FqImage imh	=	new FqImage(im);
imh.setColorJu();



HTable table = new HTable("colorJu");
Scan s = new Scan();
ResultScanner ss = table.getScanner(s);

double[] hsv = new double[10];
int[] id=new int[100];
double[] imageDis=new double[100];
int counter=0;
for(Result r:ss){
	 KeyValue[] kv=r.raw();
	 id[counter]= Integer.parseInt(new String(kv[0].getRow()));
	 for(int i=0;i<kv.length;i++){
           hsv[i]=Double.parseDouble(new String(kv[i].getValue()));
       }

     double[] colorJuH = new double[4];
     double[] colorJuS = new double[4];
     double[] colorJuV = new double[4];
   
    for(int i=0;i<hsv.length;i++)
     {
     	if(i>=1 && i<=3)
     	{
     	colorJuH[i]=hsv[i];
     	}
     	if(i>3 && i<=6)
     	{
     		colorJuS[i-3]=hsv[i];
     	}
     	if(i>6 && i<=9)
     	{
     		colorJuV[i-6]=hsv[i];
     	}
     }
    counter++;
    for(int i=0;i<counter;i++)
    {  
    imageDis[counter]=dColorJu(imh,colorJuH,colorJuS,colorJuV);
    out.println("<p>"+imageDis[counter]+"</p>"); 
    }
}
}
    
    
    public double dColorJu( FqImage imh, double[] colorJuH,double[] colorJuS,double[] colorJuV){
		double	temph	=	0.0;
		double 	temps 	= 	0.0;
		double 	tempv 	= 	0.0;
		int		i;
		double	wh		=	8.0;
		double	ws		=	3.01;
		double	wv		=	3.01;
		for( i = 1 ; i <= 3 ; i++ ){
			temph += (	( colorJuH[i] - imh.colorJuH[i] ) * ( colorJuH[i] - imh.colorJuH[i] )	);
			temps += (	( colorJuS[i] - imh.colorJuS[i] ) * ( colorJuS[i] - imh.colorJuS[i] )	);
			tempv += (	( colorJuV[i] - imh.colorJuV[i] ) * ( colorJuV[i] - imh.colorJuV[i] ) );
		}
		return	Math.sqrt( temph * wh + temps * ws + tempv * wv );
	}
    
}